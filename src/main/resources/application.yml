topic:
  tracab-01:
    name: tracabgen5_03_enriched
    replication-factor: 2
    partitions: 3
  general-01:
    name: general_01_player_ball
    replication-factor: 2
    partitions: 3
  general-02:
    name: general_02_team
    replication-factor: 2
    partitions: 3
  general-03:
    name: general_01_player_ball_compact
    replication-factor: 2
    partitions: 3

spring:
  application:
    name: "tracabgen5-spliter"

  kafka:
    bootstrap-servers:
      - kafka-1:19092
      - kafka-2:19093
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      # This is the default: log, fail and stop processing records (stop stream)
      default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndFailExceptionHandler
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
    consumer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      # This is the default: log, fail and stop processing records (stop stream)
      default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndFailExceptionHandler
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
    streams:
      application-id: ${spring.application.name}
      client-id: ${spring.application.name}-stream
      replication-factor: 2
      #commit.interval.ms: 100
      #group-id: <group_id> #this shows up in KafkaStreamsConfiguration
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      # This is the default: log, fail and stop processing records (stop stream)
      default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndFailExceptionHandler
      #auto-offset-reset: latest
      #compression-type: lz4 #this shows up in KafkaStreamsConfiguration
      #state.cleanup.delay.ms: 600000
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
    properties:
      schema.registry.url: "http://schema-registry-1:8081"
    listener:
      missing-topics-fatal: false
